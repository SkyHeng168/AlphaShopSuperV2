@model AlphaShop.Models.CategoryDto

@{
    ViewData["Title"] = "Edit Category";
    var id = ViewData["Id"] as int?;
    var iconUrl = ViewData["IconUrl"] as string;
    var parentCategories = ViewData["ParentCategories"] as IEnumerable<SelectListItem>;
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <h1 class="display-6 fw-semibold text-primary">Edit Category</h1>
                <a asp-action="Index" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left me-2"></i>Back to List
                </a>
            </div>
            <hr class="mt-2 mb-4" style="border-top: 2px solid #e9ecef;">
        </div>
    </div>

    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card shadow-sm border-0">
                <div class="card-header bg-primary text-white py-3">
                    <h5 class="mb-0">Edit Category Information</h5>
                </div>
                <div class="card-body p-4">
                    <form asp-controller="Category" asp-action="EditCategory" method="post" enctype="multipart/form-data" class="needs-validation">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@id" />
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger mb-4"></div>

                        <div class="mb-4">
                            <label asp-for="Name" class="form-label fw-semibold">Category Name <span class="text-danger">*</span></label>
                            <input asp-for="Name" class="form-control form-control-lg" placeholder="Enter category name" required />
                            <span asp-validation-for="Name" class="text-danger small"></span>
                        </div>

                        <div class="mb-4">
                            <label asp-for="Description" class="form-label fw-semibold">Description</label>
                            <textarea asp-for="Description" class="form-control" rows="4" placeholder="Enter category description (optional)"></textarea>
                            <span asp-validation-for="Description" class="text-danger small"></span>
                        </div>

                        <div class="mb-4">
                            <label asp-for="ParentCategoryId" class="form-label fw-semibold">Parent Category</label>
                            <select asp-for="ParentCategoryId" class="form-select" asp-items="parentCategories">
                                <option value="">-- No Parent Category --</option>
                            </select>
                            <span asp-validation-for="ParentCategoryId" class="text-danger small"></span>
                        </div>

                        <div class="mb-4">
                            <label class="form-label fw-semibold">Current Icon</label>
                            <div class="current-icon mb-3">
                                @if (!string.IsNullOrEmpty(iconUrl) && iconUrl != "Default.jpg")
                                {
                                    <img src="@Url.Content("~/images/icon/" + iconUrl)" alt="Current Icon" class="img-thumbnail" style="max-width: 100px; max-height: 100px;" />
                                }
                                else
                                {
                                    <div class="text-muted">No icon uploaded</div>
                                }
                            </div>

                            <label asp-for="IconUrl" class="form-label fw-semibold">Update Icon</label>
                            <div class="file-upload-wrapper">
                                <input type="file" asp-for="IconUrl" class="form-control" accept="image/*"
                                       onchange="previewImage(this, 'iconPreview')" />
                                <small class="form-text text-muted">Leave blank to keep current icon. Recommended size: 100x100px (PNG, JPG)</small>
                                <span asp-validation-for="IconUrl" class="text-danger small"></span>
                            </div>
                            <div id="iconPreview" class="mt-3 text-center" style="display:none;">
                                <img id="previewImage" src="#" alt="Icon Preview" class="img-thumbnail" style="max-width: 100px; max-height: 100px;" />
                                <div class="mt-2">
                                    <button type="button" class="btn btn-sm btn-outline-danger" onclick="clearImageInput('IconUrl', 'iconPreview')">
                                        <i class="fas fa-times me-1"></i>Remove
                                    </button>
                                </div>
                            </div>
                        </div>

                        <div class="d-grid gap-2 d-md-flex justify-content-md-end mt-4 pt-3 border-top">
                            <button type="reset" class="btn btn-outline-secondary me-md-2" onclick="resetForm()">
                                <i class="fas fa-undo me-2"></i>Reset Changes
                            </button>
                            <button type="submit" class="btn btn-primary px-4">
                                <i class="fas fa-save me-2"></i>Save Changes
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Image preview functionality
        function previewImage(input, previewId) {
            const preview = document.getElementById(previewId);
            const previewImage = document.getElementById('previewImage');
            const fileInput = document.querySelector(`input[name="${input.name}"]`);

            if (input.files && input.files[0]) {
                const reader = new FileReader();

                reader.onload = function(e) {
                    previewImage.src = e.target.result;
                    preview.style.display = 'block';
                    fileInput.classList.remove('is-invalid');
                }

                reader.readAsDataURL(input.files[0]);
            } else {
                preview.style.display = 'none';
                previewImage.src = '#';
            }
        }

        // Clear image input and preview
        function clearImageInput(inputName, previewId) {
            const fileInput = document.querySelector(`input[name="${inputName}"]`);
            fileInput.value = '';
            document.getElementById(previewId).style.display = 'none';

            // Reset validation
            fileInput.classList.remove('is-invalid');
            const errorSpan = fileInput.nextElementSibling?.nextElementSibling;
            if (errorSpan) {
                errorSpan.textContent = '';
            }
        }

        // Reset form including validation state
        function resetForm() {
            const form = document.querySelector('.needs-validation');
            form.classList.remove('was-validated');

            // Clear file previews
            document.getElementById('iconPreview').style.display = 'none';

            // Reset validation messages
            const errorSpans = document.querySelectorAll('.text-danger');
            errorSpans.forEach(span => span.textContent = '');
        }

        // Enable Bootstrap 5 form validation
        (function () {
            'use strict'
            const forms = document.querySelectorAll('.needs-validation')

            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }
                    form.classList.add('was-validated')
                }, false)
            })
        })()
    </script>
}

<style>
    .file-upload-wrapper {
        position: relative;
        margin-bottom: 1rem;
    }

    .form-control-lg {
        padding: 0.75rem 1rem;
        font-size: 1.05rem;
    }

    .card {
        border-radius: 0.5rem;
        overflow: hidden;
    }

    .card-header {
        border-bottom: none;
    }

    .form-label {
        margin-bottom: 0.5rem;
        color: #495057;
    }

    .current-icon {
        background-color: #f8f9fa;
        padding: 1rem;
        border-radius: 0.25rem;
        text-align: center;
    }

    .btn-primary {
        background-color: #4e73df;
        border-color: #4e73df;
    }

        .btn-primary:hover {
            background-color: #3a5ec4;
            border-color: #3a5ec4;
        }

    .img-thumbnail {
        background-color: #f8f9fa;
        border: 1px solid #dee2e6;
    }
</style>
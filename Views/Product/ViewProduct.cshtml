@model AlphaShop.Models.Product

@{
    ViewData["Title"] = Model.ProductName;
}

<div class="container-fluid px-4 py-4">
    <!-- Header with Breadcrumb -->
    <div class="d-flex flex-wrap justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h3 mb-0 text-gray-800">
                <i class="fas fa-box-open me-2 text-primary"></i>Product Details
            </h1>
            <nav aria-label="breadcrumb" class="mt-2">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index"><i class="fas fa-home text-primary"></i></a></li>
                    <li class="breadcrumb-item"><a asp-controller="Product" asp-action="Index">Products</a></li>
                    <li class="breadcrumb-item active" aria-current="page">@Model.ProductName</li>
                </ol>
            </nav>
        </div>
        <div>
            <a asp-controller="Product" asp-action="Index" class="btn btn-outline-primary btn-hover-shine">
                <i class="fas fa-arrow-left me-2"></i> Back to Products
            </a>
        </div>
    </div>

    <!-- Main Product Section -->
    <div class="row g-4">
        <!-- Product Images -->
        <div class="col-lg-5">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-body p-3">
                    @if (!string.IsNullOrEmpty(Model.ProductImage))
                    {
                        <div class="product-image-container position-relative">
                            <img src="~/images/Products/@Model.ProductImage"
                                 class="img-fluid rounded-3 w-100"
                                 alt="@Model.ProductName"
                                 id="mainProductImage"
                                 style="max-height: 500px; object-fit: contain;">
                            @if (Model.DisccoutPrice.HasValue && Model.DisccoutPrice < Model.BasePrice)
                            {
                                <div class="position-absolute top-0 start-0 bg-danger text-white px-3 py-1 rounded-end">
                                    <span class="fw-bold">@((int)(100 - (Model.DisccoutPrice / Model.BasePrice * 100)))% OFF</span>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="bg-light d-flex justify-content-center align-items-center rounded-3" style="height: 400px;">
                            <div class="text-center">
                                <i class="fas fa-image fa-5x text-secondary opacity-25 mb-3"></i>
                                <p class="text-muted">No image available</p>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Product Details -->
        <div class="col-lg-7">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-body p-4">
                    <div class="d-flex justify-content-between align-items-start mb-3">
                        <div>
                            <h2 class="h3 mb-2">@Model.ProductName</h2>
                            <div class="d-flex align-items-center mb-3">
                                @if (Model.Category != null)
                                {
                                    <span class="badge bg-primary me-2">@Model.Category.Name</span>
                                }
                                @if (Model.Brand != null)
                                {
                                    <span class="badge bg-secondary">@Model.Brand.Name</span>
                                }
                            </div>
                        </div>
                        <div class="text-end">
                            @if (Model.IsFeatured == true)
                            {
                                <span class="badge bg-warning text-warning-dark mb-2 d-block">Featured</span>
                            }
                            @{
                                // Calculate available inventory
                                var totalInventory = Model.InventoryLogs?.Sum(i => i.Qunatity) ?? 0;
                            }

                            @if (totalInventory > 0)
                            {
                                @if (totalInventory <= 5)
                                {
                                    <span class="badge bg-warning text-warning-dark">
                                        <i class="fas fa-exclamation-triangle me-1"></i> Low Stock (@totalInventory)
                                    </span>
                                }
                                else
                                {
                                    <span class="badge bg-success text-success-dark">
                                        <i class="fas fa-check-circle me-1"></i> In Stock (@totalInventory)
                                    </span>
                                }
                            }
                            else
                            {
                                <span class="badge bg-danger text-danger-dark">
                                    <i class="fas fa-times-circle me-1"></i> Out of Stock
                                </span>
                            }
                        </div>
                    </div>

                    <!-- Price Section -->
                    <div class="mb-4">
                        @if (Model.DisccoutPrice.HasValue && Model.DisccoutPrice < Model.BasePrice)
                        {
                            <div class="d-flex align-items-center">
                                <h3 class="h2 text-danger mb-0">@Model.DisccoutPrice.Value.ToString("C")</h3>
                                <span class="text-muted text-decoration-line-through ms-3">@Model.BasePrice.Value.ToString("C")</span>
                            </div>
                        }
                        else if (Model.Price.HasValue)
                        {
                            <h3 class="h2">@Model.Price.Value.ToString("C")</h3>
                        }
                    </div>

                    <!-- SKU/Weight -->
                    <div class="mb-4">
                        <div class="row g-3">
                            @if (!string.IsNullOrEmpty(Model.SKU))
                            {
                                <div class="col-md-6">
                                    <div class="bg-light p-3 rounded">
                                        <h6 class="text-uppercase text-muted small mb-1">SKU</h6>
                                        <p class="mb-0">@Model.SKU</p>
                                    </div>
                                </div>
                            }
                            @if (Model.Weight.HasValue)
                            {
                                <div class="col-md-6">
                                    <div class="bg-light p-3 rounded">
                                        <h6 class="text-uppercase text-muted small mb-1">Weight</h6>
                                        <p class="mb-0">@Model.Weight.Value.ToString("0.##") kg</p>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Description -->
                    <div class="mb-4">
                        <h5 class="mb-3">Description</h5>
                        @if (!string.IsNullOrEmpty(Model.ProductDescription))
                        {
                            <div class="text-muted">@Html.Raw(Model.ProductDescription.Replace("\n", "<br />"))</div>
                        }
                        else
                        {
                            <p class="text-muted fst-italic">No description available for this product.</p>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Additional Info Tabs -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-body p-0">
                    <ul class="nav nav-tabs nav-underline" id="productTabs" role="tablist">
                        <li class="nav-item" role="presentation">
                            <button class="nav-link active" id="details-tab" data-bs-toggle="tab" data-bs-target="#details" type="button" role="tab">
                                <i class="fas fa-info-circle me-2"></i>Details
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="shipping-tab" data-bs-toggle="tab" data-bs-target="#shipping" type="button" role="tab">
                                <i class="fas fa-truck me-2"></i>Shipping
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="inventory-tab" data-bs-toggle="tab" data-bs-target="#inventory" type="button" role="tab">
                                <i class="fas fa-warehouse me-2"></i>Inventory
                            </button>
                        </li>
                    </ul>
                    <div class="tab-content p-4" id="productTabsContent">
                        <div class="tab-pane fade show active" id="details" role="tabpanel">
                            <div class="row">
                                <div class="col-md-6">
                                    <h5 class="mb-4">Product Information</h5>
                                    <dl class="row">
                                        <dt class="col-sm-4">Created</dt>
                                        <dd class="col-sm-8">@Model.CreatedAt.ToString("MMMM dd, yyyy")</dd>

                                        <dt class="col-sm-4">Last Updated</dt>
                                        <dd class="col-sm-8">@Model.UpdatedAt.ToString("MMMM dd, yyyy")</dd>

                                        @if (Model.Category != null)
                                        {
                                            <dt class="col-sm-4">Category</dt>
                                            <dd class="col-sm-8">@Model.Category.Name</dd>
                                        }

                                        @if (Model.Brand != null)
                                        {
                                            <dt class="col-sm-4">Brand</dt>
                                            <dd class="col-sm-8">@Model.Brand.Name</dd>
                                        }
                                    </dl>
                                </div>
                                <div class="col-md-6">
                                    <h5 class="mb-4">Technical Details</h5>
                                    <!-- Add any technical specifications here -->
                                    <p class="text-muted">No additional technical details available.</p>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade" id="shipping" role="tabpanel">
                            <div class="row">
                                <div class="col-md-6">
                                    <h5 class="mb-4">Shipping Information</h5>
                                    <ul class="list-unstyled">
                                        <li class="mb-3">
                                            <i class="fas fa-shipping-fast text-primary me-2"></i>
                                            <strong>Standard Shipping:</strong> 3-5 business days
                                        </li>
                                        <li class="mb-3">
                                            <i class="fas fa-bolt text-primary me-2"></i>
                                            <strong>Express Shipping:</strong> Available at checkout
                                        </li>
                                        <li>
                                            <i class="fas fa-undo text-primary me-2"></i>
                                            <strong>Returns:</strong> Free returns within 30 days
                                        </li>
                                    </ul>
                                </div>
                                <div class="col-md-6">
                                    <h5 class="mb-4">Shipping Policy</h5>
                                    <p>All orders are processed within 1-2 business days. You will receive a tracking number once your order has shipped.</p>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade" id="inventory" role="tabpanel">
                            <h5 class="mb-4">Inventory Information</h5>
                            @if (Model.WareHouse != null)
                            {
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="bg-light p-3 rounded mb-3">
                                            <h6 class="text-uppercase text-muted small mb-2">Warehouse</h6>
                                            <p class="mb-1">@Model.WareHouse.WareHouseName</p>
                                            <small class="text-muted">@Model.WareHouse.WareHouseLocation</small>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="bg-light p-3 rounded">  
                                            <h6 class="text-uppercase text-muted small mb-2">Supplier</h6>
                                            @if (Model.Supplier != null)
                                            {
                                                <p class="mb-1">@Model.Supplier.SupplierName</p>
                                                <small class="text-muted">@Model.Supplier.ContactPerson</small>
                                            }
                                            else
                                            {
                                                <p class="text-muted mb-0">No supplier assigned</p>
                                            }
                                        </div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <p class="text-muted">No inventory information available for this product.</p>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        /* Custom color variables */
        :root {
            --primary: #2c7be5;
            --primary-soft: rgba(44, 123, 229, 0.1);
            --secondary: #6c757d;
            --secondary-soft: rgba(108, 117, 125, 0.1);
            --success: #00a854;
            --success-soft: rgba(0, 168, 84, 0.1);
            --danger: #e63757;
            --danger-soft: rgba(230, 55, 87, 0.1);
            --warning: #f7c32e;
            --warning-soft: rgba(247, 195, 46, 0.1);
            --warning-dark: #8a6d3b;
        }

        .card {
            border-radius: 0.5rem;
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }

            .card:hover {
                transform: translateY(-2px);
                box-shadow: 0 0.5rem 1.5rem 0 rgba(33, 40, 50, 0.15);
            }

        .nav-underline .nav-link {
            border: none;
            color: var(--secondary);
            font-weight: 500;
            padding: 1rem 1.5rem;
            position: relative;
        }

            .nav-underline .nav-link.active {
                color: var(--primary);
                background-color: transparent;
            }

                .nav-underline .nav-link.active:after {
                    content: '';
                    position: absolute;
                    bottom: 0;
                    left: 0;
                    right: 0;
                    height: 3px;
                    background-color: var(--primary);
                }

        .badge {
            font-size: 0.75em;
            font-weight: 600;
            letter-spacing: 0.5px;
            padding: 0.35em 0.65em;
        }

        .bg-primary-soft {
            background-color: var(--primary-soft);
        }

        .bg-secondary-soft {
            background-color: var(--secondary-soft);
        }

        .bg-success-soft {
            background-color: var(--success-soft);
        }

        .bg-danger-soft {
            background-color: var(--danger-soft);
        }

        .bg-warning-soft {
            background-color: var(--warning-soft);
        }

        .text-warning-dark {
            color: var(--warning-dark);
        }

        .product-image-container {
            background-color: #f8f9fa;
            border-radius: 0.5rem;
            padding: 1rem;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .btn-hover-shine:hover {
            box-shadow: 0 4px 15px rgba(44, 123, 229, 0.3);
        }
    </style>
}

@section Scripts {
    <script>
        // Initialize tooltips
        $(function () {
            $('[data-bs-toggle="tooltip"]').tooltip();
        });

        // Quantity buttons functionality
        document.querySelectorAll('.quantity-btn').forEach(button => {
            button.addEventListener('click', function() {
                const input = this.closest('.input-group').querySelector('input');
                let value = parseInt(input.value);

                if (this.classList.contains('plus') && value < 10) {
                    input.value = value + 1;
                } else if (this.classList.contains('minus') && value > 1) {
                    input.value = value - 1;
                }
            });
        });

        // Tab persistence
        const productTab = localStorage.getItem('productTab');
        if (productTab) {
            const tabTrigger = new bootstrap.Tab(document.querySelector(productTab));
            tabTrigger.show();
        }

        document.querySelectorAll('[data-bs-toggle="tab"]').forEach(tab => {
            tab.addEventListener('click', function() {
                localStorage.setItem('productTab', this.getAttribute('data-bs-target'));
            });
        });
    </script>
}